---
apiVersion: policy/v1

kind: PodDisruptionBudget

metadata:

  name: zk-pdb

spec:

  minAvailable: 1

  selector:

    matchLabels:

      app: web-store

---
apiVersion: networking.k8s.io/v1

kind: NetworkPolicy

metadata:

  name: default-deny-all

spec:

  podSelector: {}

  policyTypes:

  - Ingress

  - Egress

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-server
spec:
  securityContext:
    runAsUser: 10000
    runAsGroup: 10000
  selector:
    matchLabels:
      app: web-store
  replicas: 2
  template:
    metadata:
      labels:
        app: web-store
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - web-store
            topologyKey: "kubernetes.io/hostname"
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - store
            topologyKey: "kubernetes.io/hostname"
      containers:
      - name: web-store
        image: images.my-company.example/app:v4
        imagePullPolicy: Always
        securityContext:
          runAsUser: 10000
          runAsGroup: 10000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: True
        args:
        - -cpus
        - "2"
        resources:
          requests:
            ephemeral-storage: "2Gi"
            memory: "64Mi"
            cpu: "250m"
          limits:
            ephemeral-storage: "4Gi"
            memory: "128Mi"
            cpu: "500m"
        volumeMounts:
        - name: ephemeral
          mountPath: "/tmp"
    volumes:
      - name: ephemeral
        emptyDir:
          sizeLimit: 500Mi
